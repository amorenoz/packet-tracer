/* automatically generated by rust-bindgen 0.70.1 */

pub type __u8 = ::std::os::raw::c_uchar;
pub type __u32 = ::std::os::raw::c_uint;
pub type u8_ = __u8;
pub type u32_ = __u32;
pub type __s16 = ::std::os::raw::c_short;
pub type s16 = __s16;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct retis_packet_filter_ctx {
    pub len: u32_,
    pub ret: u32_,
    pub data: *mut u8_,
}
impl Default for retis_packet_filter_ctx {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
pub const filter_max_insns: u32_ = 4096;
pub const stack_reserved: s16 = 8;
pub const scratch_mem_size: s16 = 4;
pub const scratch_mem_start: s16 = 72;
pub const FILTER_L2: filter_type = 3735928559;
pub const FILTER_L3: filter_type = 3735929054;
pub type filter_type = ::std::os::raw::c_uint;
